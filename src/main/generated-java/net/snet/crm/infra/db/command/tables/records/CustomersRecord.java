/*
 * This file is generated by jOOQ.
 */
package net.snet.crm.infra.db.command.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import net.snet.crm.infra.db.command.tables.Customers;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "customers", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "customers_pkey", columnNames = {"id"}),
    @UniqueConstraint(name = "customers_history_id_key", columnNames = {"history_id"})
}, indexes = {
    @Index(name = "customers_history_id_key", unique = true, columnList = "history_id ASC"),
    @Index(name = "customers_pkey", unique = true, columnList = "id ASC"),
    @Index(name = "customers_search_idx", columnList = "lexems ASC")
})
public class CustomersRecord extends UpdatableRecordImpl<CustomersRecord> {

    private static final long serialVersionUID = -1143319855;

    /**
     * Setter for <code>public.customers.id</code>.
     */
    public CustomersRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 64)
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.customers.history_id</code>.
     */
    public CustomersRecord setHistoryId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.history_id</code>.
     */
    @Column(name = "history_id", nullable = false, precision = 64)
    @NotNull
    public Long getHistoryId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.customers.public_id</code>.
     */
    public CustomersRecord setPublicId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.public_id</code>.
     */
    @Column(name = "public_id", nullable = false, length = 20)
    @NotNull
    @Size(max = 20)
    public String getPublicId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.customers.name</code>.
     */
    public CustomersRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.name</code>.
     */
    @Column(name = "name", nullable = false, length = 80)
    @NotNull
    @Size(max = 80)
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.customers.supplementary_name</code>.
     */
    public CustomersRecord setSupplementaryName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.supplementary_name</code>.
     */
    @Column(name = "supplementary_name", length = 50)
    @Size(max = 50)
    public String getSupplementaryName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.customers.street</code>.
     */
    public CustomersRecord setStreet(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.street</code>.
     */
    @Column(name = "street", length = 40)
    @Size(max = 40)
    public String getStreet() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.customers.city</code>.
     */
    public CustomersRecord setCity(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.city</code>.
     */
    @Column(name = "city", length = 40)
    @Size(max = 40)
    public String getCity() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.customers.postal_code</code>.
     */
    public CustomersRecord setPostalCode(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.postal_code</code>.
     */
    @Column(name = "postal_code", length = 10)
    @Size(max = 10)
    public String getPostalCode() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.customers.country</code>.
     */
    public CustomersRecord setCountry(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.country</code>.
     */
    @Column(name = "country", precision = 32)
    public Integer getCountry() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.customers.email</code>.
     */
    public CustomersRecord setEmail(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.email</code>.
     */
    @Column(name = "email", length = 50)
    @Size(max = 50)
    public String getEmail() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.customers.dic</code>.
     */
    public CustomersRecord setDic(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.dic</code>.
     */
    @Column(name = "dic", length = 20)
    @Size(max = 20)
    public String getDic() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.customers.contract_no</code>.
     */
    public CustomersRecord setContractNo(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.contract_no</code>.
     */
    @Column(name = "contract_no", length = 50)
    @Size(max = 50)
    public String getContractNo() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.customers.connection_spot</code>.
     */
    public CustomersRecord setConnectionSpot(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.connection_spot</code>.
     */
    @Column(name = "connection_spot", length = 100)
    @Size(max = 100)
    public String getConnectionSpot() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.customers.inserted_on</code>.
     */
    public CustomersRecord setInsertedOn(Timestamp value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.inserted_on</code>.
     */
    @Column(name = "inserted_on", nullable = false)
    @NotNull
    public Timestamp getInsertedOn() {
        return (Timestamp) get(13);
    }

    /**
     * Setter for <code>public.customers.frequency</code>.
     */
    public CustomersRecord setFrequency(Integer value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.frequency</code>.
     */
    @Column(name = "frequency", precision = 32)
    public Integer getFrequency() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>public.customers.lastly_billed</code>.
     */
    public CustomersRecord setLastlyBilled(Timestamp value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.lastly_billed</code>.
     */
    @Column(name = "lastly_billed")
    public Timestamp getLastlyBilled() {
        return (Timestamp) get(15);
    }

    /**
     * Setter for <code>public.customers.is_billed_after</code>.
     */
    public CustomersRecord setIsBilledAfter(Boolean value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.is_billed_after</code>.
     */
    @Column(name = "is_billed_after")
    public Boolean getIsBilledAfter() {
        return (Boolean) get(16);
    }

    /**
     * Setter for <code>public.customers.deliver_by_email</code>.
     */
    public CustomersRecord setDeliverByEmail(Boolean value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.deliver_by_email</code>.
     */
    @Column(name = "deliver_by_email")
    public Boolean getDeliverByEmail() {
        return (Boolean) get(17);
    }

    /**
     * Setter for <code>public.customers.deliver_copy_email</code>.
     */
    public CustomersRecord setDeliverCopyEmail(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.deliver_copy_email</code>.
     */
    @Column(name = "deliver_copy_email", length = 100)
    @Size(max = 100)
    public String getDeliverCopyEmail() {
        return (String) get(18);
    }

    /**
     * Setter for <code>public.customers.deliver_by_mail</code>.
     */
    public CustomersRecord setDeliverByMail(Boolean value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.deliver_by_mail</code>.
     */
    @Column(name = "deliver_by_mail")
    public Boolean getDeliverByMail() {
        return (Boolean) get(19);
    }

    /**
     * Setter for <code>public.customers.is_auto_billing</code>.
     */
    public CustomersRecord setIsAutoBilling(Boolean value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.is_auto_billing</code>.
     */
    @Column(name = "is_auto_billing")
    public Boolean getIsAutoBilling() {
        return (Boolean) get(20);
    }

    /**
     * Setter for <code>public.customers.info</code>.
     */
    public CustomersRecord setInfo(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.info</code>.
     */
    @Column(name = "info", length = 150)
    @Size(max = 150)
    public String getInfo() {
        return (String) get(21);
    }

    /**
     * Setter for <code>public.customers.contact_name</code>.
     */
    public CustomersRecord setContactName(String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.contact_name</code>.
     */
    @Column(name = "contact_name", length = 50)
    @Size(max = 50)
    public String getContactName() {
        return (String) get(22);
    }

    /**
     * Setter for <code>public.customers.phone</code>.
     */
    public CustomersRecord setPhone(String value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.phone</code>.
     */
    @Column(name = "phone", length = 60)
    @Size(max = 60)
    public String getPhone() {
        return (String) get(23);
    }

    /**
     * Setter for <code>public.customers.is_active</code>.
     */
    public CustomersRecord setIsActive(Boolean value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.is_active</code>.
     */
    @Column(name = "is_active")
    public Boolean getIsActive() {
        return (Boolean) get(24);
    }

    /**
     * Setter for <code>public.customers.status</code>.
     */
    public CustomersRecord setStatus(Integer value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.status</code>.
     */
    @Column(name = "status", precision = 32)
    public Integer getStatus() {
        return (Integer) get(25);
    }

    /**
     * Setter for <code>public.customers.shire_id</code>.
     */
    public CustomersRecord setShireId(Long value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.shire_id</code>.
     */
    @Column(name = "shire_id", precision = 64)
    public Long getShireId() {
        return (Long) get(26);
    }

    /**
     * Setter for <code>public.customers.format</code>.
     */
    public CustomersRecord setFormat(Integer value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.format</code>.
     */
    @Column(name = "format", precision = 32)
    public Integer getFormat() {
        return (Integer) get(27);
    }

    /**
     * Setter for <code>public.customers.deliver_signed</code>.
     */
    public CustomersRecord setDeliverSigned(Boolean value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.deliver_signed</code>.
     */
    @Column(name = "deliver_signed")
    public Boolean getDeliverSigned() {
        return (Boolean) get(28);
    }

    /**
     * Setter for <code>public.customers.symbol</code>.
     */
    public CustomersRecord setSymbol(String value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.symbol</code>.
     */
    @Column(name = "symbol", length = 20)
    @Size(max = 20)
    public String getSymbol() {
        return (String) get(29);
    }

    /**
     * Setter for <code>public.customers.updated</code>.
     */
    public CustomersRecord setUpdated(Timestamp value) {
        set(30, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.updated</code>.
     */
    @Column(name = "updated")
    public Timestamp getUpdated() {
        return (Timestamp) get(30);
    }

    /**
     * Setter for <code>public.customers.synchronized</code>.
     */
    public CustomersRecord setSynchronized(Timestamp value) {
        set(31, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.synchronized</code>.
     */
    @Column(name = "synchronized")
    public Timestamp getSynchronized() {
        return (Timestamp) get(31);
    }

    /**
     * Setter for <code>public.customers.account_no</code>.
     */
    public CustomersRecord setAccountNo(String value) {
        set(32, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.account_no</code>.
     */
    @Column(name = "account_no", length = 26)
    @Size(max = 26)
    public String getAccountNo() {
        return (String) get(32);
    }

    /**
     * Setter for <code>public.customers.bank_no</code>.
     */
    public CustomersRecord setBankNo(String value) {
        set(33, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.bank_no</code>.
     */
    @Column(name = "bank_no", length = 4)
    @Size(max = 4)
    public String getBankNo() {
        return (String) get(33);
    }

    /**
     * Setter for <code>public.customers.variable</code>.
     */
    public CustomersRecord setVariable(Integer value) {
        set(34, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.variable</code>.
     */
    @Column(name = "variable", precision = 32)
    public Integer getVariable() {
        return (Integer) get(34);
    }

    /**
     * Setter for <code>public.customers.customer_status</code>.
     */
    public CustomersRecord setCustomerStatus(String value) {
        set(35, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.customer_status</code>.
     */
    @Column(name = "customer_status", nullable = false, length = 16)
    @Size(max = 16)
    public String getCustomerStatus() {
        return (String) get(35);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public CustomersRecord setLexems(Object value) {
        set(36, value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "lexems")
    public Object getLexems() {
        return get(36);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomersRecord
     */
    public CustomersRecord() {
        super(Customers.CUSTOMERS);
    }

    /**
     * Create a detached, initialised CustomersRecord
     */
    public CustomersRecord(Long id, Long historyId, String publicId, String name, String supplementaryName, String street, String city, String postalCode, Integer country, String email, String dic, String contractNo, String connectionSpot, Timestamp insertedOn, Integer frequency, Timestamp lastlyBilled, Boolean isBilledAfter, Boolean deliverByEmail, String deliverCopyEmail, Boolean deliverByMail, Boolean isAutoBilling, String info, String contactName, String phone, Boolean isActive, Integer status, Long shireId, Integer format, Boolean deliverSigned, String symbol, Timestamp updated, Timestamp synchronized_, String accountNo, String bankNo, Integer variable, String customerStatus, Object lexems) {
        super(Customers.CUSTOMERS);

        set(0, id);
        set(1, historyId);
        set(2, publicId);
        set(3, name);
        set(4, supplementaryName);
        set(5, street);
        set(6, city);
        set(7, postalCode);
        set(8, country);
        set(9, email);
        set(10, dic);
        set(11, contractNo);
        set(12, connectionSpot);
        set(13, insertedOn);
        set(14, frequency);
        set(15, lastlyBilled);
        set(16, isBilledAfter);
        set(17, deliverByEmail);
        set(18, deliverCopyEmail);
        set(19, deliverByMail);
        set(20, isAutoBilling);
        set(21, info);
        set(22, contactName);
        set(23, phone);
        set(24, isActive);
        set(25, status);
        set(26, shireId);
        set(27, format);
        set(28, deliverSigned);
        set(29, symbol);
        set(30, updated);
        set(31, synchronized_);
        set(32, accountNo);
        set(33, bankNo);
        set(34, variable);
        set(35, customerStatus);
        set(36, lexems);
    }
}
