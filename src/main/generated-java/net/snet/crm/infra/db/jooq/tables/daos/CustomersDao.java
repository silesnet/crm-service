/*
 * This file is generated by jOOQ.
 */
package net.snet.crm.infra.db.jooq.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import net.snet.crm.infra.db.jooq.tables.Customers;
import net.snet.crm.infra.db.jooq.tables.records.CustomersRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomersDao extends DAOImpl<CustomersRecord, net.snet.crm.infra.db.jooq.tables.pojos.Customers, Long> {

    /**
     * Create a new CustomersDao without any configuration
     */
    public CustomersDao() {
        super(Customers.CUSTOMERS, net.snet.crm.infra.db.jooq.tables.pojos.Customers.class);
    }

    /**
     * Create a new CustomersDao with an attached configuration
     */
    public CustomersDao(Configuration configuration) {
        super(Customers.CUSTOMERS, net.snet.crm.infra.db.jooq.tables.pojos.Customers.class, configuration);
    }

    @Override
    public Long getId(net.snet.crm.infra.db.jooq.tables.pojos.Customers object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchById(Long... values) {
        return fetch(Customers.CUSTOMERS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public net.snet.crm.infra.db.jooq.tables.pojos.Customers fetchOneById(Long value) {
        return fetchOne(Customers.CUSTOMERS.ID, value);
    }

    /**
     * Fetch records that have <code>history_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfHistoryId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.HISTORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>history_id IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByHistoryId(Long... values) {
        return fetch(Customers.CUSTOMERS.HISTORY_ID, values);
    }

    /**
     * Fetch a unique record that has <code>history_id = value</code>
     */
    public net.snet.crm.infra.db.jooq.tables.pojos.Customers fetchOneByHistoryId(Long value) {
        return fetchOne(Customers.CUSTOMERS.HISTORY_ID, value);
    }

    /**
     * Fetch records that have <code>public_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfPublicId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.PUBLIC_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>public_id IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByPublicId(String... values) {
        return fetch(Customers.CUSTOMERS.PUBLIC_ID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByName(String... values) {
        return fetch(Customers.CUSTOMERS.NAME, values);
    }

    /**
     * Fetch records that have <code>supplementary_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfSupplementaryName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.SUPPLEMENTARY_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>supplementary_name IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchBySupplementaryName(String... values) {
        return fetch(Customers.CUSTOMERS.SUPPLEMENTARY_NAME, values);
    }

    /**
     * Fetch records that have <code>street BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfStreet(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.STREET, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>street IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByStreet(String... values) {
        return fetch(Customers.CUSTOMERS.STREET, values);
    }

    /**
     * Fetch records that have <code>city BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByCity(String... values) {
        return fetch(Customers.CUSTOMERS.CITY, values);
    }

    /**
     * Fetch records that have <code>postal_code BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfPostalCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.POSTAL_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>postal_code IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByPostalCode(String... values) {
        return fetch(Customers.CUSTOMERS.POSTAL_CODE, values);
    }

    /**
     * Fetch records that have <code>country BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfCountry(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.COUNTRY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>country IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByCountry(Integer... values) {
        return fetch(Customers.CUSTOMERS.COUNTRY, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByEmail(String... values) {
        return fetch(Customers.CUSTOMERS.EMAIL, values);
    }

    /**
     * Fetch records that have <code>dic BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfDic(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.DIC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dic IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByDic(String... values) {
        return fetch(Customers.CUSTOMERS.DIC, values);
    }

    /**
     * Fetch records that have <code>contract_no BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfContractNo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.CONTRACT_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>contract_no IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByContractNo(String... values) {
        return fetch(Customers.CUSTOMERS.CONTRACT_NO, values);
    }

    /**
     * Fetch records that have <code>connection_spot BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfConnectionSpot(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.CONNECTION_SPOT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>connection_spot IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByConnectionSpot(String... values) {
        return fetch(Customers.CUSTOMERS.CONNECTION_SPOT, values);
    }

    /**
     * Fetch records that have <code>inserted_on BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfInsertedOn(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.INSERTED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inserted_on IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByInsertedOn(Timestamp... values) {
        return fetch(Customers.CUSTOMERS.INSERTED_ON, values);
    }

    /**
     * Fetch records that have <code>frequency BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfFrequency(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.FREQUENCY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>frequency IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByFrequency(Integer... values) {
        return fetch(Customers.CUSTOMERS.FREQUENCY, values);
    }

    /**
     * Fetch records that have <code>lastly_billed BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfLastlyBilled(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.LASTLY_BILLED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lastly_billed IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByLastlyBilled(Timestamp... values) {
        return fetch(Customers.CUSTOMERS.LASTLY_BILLED, values);
    }

    /**
     * Fetch records that have <code>is_billed_after BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfIsBilledAfter(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.IS_BILLED_AFTER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_billed_after IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByIsBilledAfter(Boolean... values) {
        return fetch(Customers.CUSTOMERS.IS_BILLED_AFTER, values);
    }

    /**
     * Fetch records that have <code>deliver_by_email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfDeliverByEmail(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.DELIVER_BY_EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deliver_by_email IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByDeliverByEmail(Boolean... values) {
        return fetch(Customers.CUSTOMERS.DELIVER_BY_EMAIL, values);
    }

    /**
     * Fetch records that have <code>deliver_copy_email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfDeliverCopyEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.DELIVER_COPY_EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deliver_copy_email IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByDeliverCopyEmail(String... values) {
        return fetch(Customers.CUSTOMERS.DELIVER_COPY_EMAIL, values);
    }

    /**
     * Fetch records that have <code>deliver_by_mail BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfDeliverByMail(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.DELIVER_BY_MAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deliver_by_mail IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByDeliverByMail(Boolean... values) {
        return fetch(Customers.CUSTOMERS.DELIVER_BY_MAIL, values);
    }

    /**
     * Fetch records that have <code>is_auto_billing BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfIsAutoBilling(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.IS_AUTO_BILLING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_auto_billing IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByIsAutoBilling(Boolean... values) {
        return fetch(Customers.CUSTOMERS.IS_AUTO_BILLING, values);
    }

    /**
     * Fetch records that have <code>info BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfInfo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.INFO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>info IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByInfo(String... values) {
        return fetch(Customers.CUSTOMERS.INFO, values);
    }

    /**
     * Fetch records that have <code>contact_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfContactName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.CONTACT_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>contact_name IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByContactName(String... values) {
        return fetch(Customers.CUSTOMERS.CONTACT_NAME, values);
    }

    /**
     * Fetch records that have <code>phone BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByPhone(String... values) {
        return fetch(Customers.CUSTOMERS.PHONE, values);
    }

    /**
     * Fetch records that have <code>is_active BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfIsActive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.IS_ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_active IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByIsActive(Boolean... values) {
        return fetch(Customers.CUSTOMERS.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfStatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByStatus(Integer... values) {
        return fetch(Customers.CUSTOMERS.STATUS, values);
    }

    /**
     * Fetch records that have <code>shire_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfShireId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.SHIRE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>shire_id IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByShireId(Long... values) {
        return fetch(Customers.CUSTOMERS.SHIRE_ID, values);
    }

    /**
     * Fetch records that have <code>format BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfFormat(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.FORMAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>format IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByFormat(Integer... values) {
        return fetch(Customers.CUSTOMERS.FORMAT, values);
    }

    /**
     * Fetch records that have <code>deliver_signed BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfDeliverSigned(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.DELIVER_SIGNED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deliver_signed IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByDeliverSigned(Boolean... values) {
        return fetch(Customers.CUSTOMERS.DELIVER_SIGNED, values);
    }

    /**
     * Fetch records that have <code>symbol BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfSymbol(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.SYMBOL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>symbol IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchBySymbol(String... values) {
        return fetch(Customers.CUSTOMERS.SYMBOL, values);
    }

    /**
     * Fetch records that have <code>updated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfUpdated(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.UPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByUpdated(Timestamp... values) {
        return fetch(Customers.CUSTOMERS.UPDATED, values);
    }

    /**
     * Fetch records that have <code>synchronized BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfSynchronized(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.SYNCHRONIZED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>synchronized IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchBySynchronized(Timestamp... values) {
        return fetch(Customers.CUSTOMERS.SYNCHRONIZED, values);
    }

    /**
     * Fetch records that have <code>account_no BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfAccountNo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.ACCOUNT_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>account_no IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByAccountNo(String... values) {
        return fetch(Customers.CUSTOMERS.ACCOUNT_NO, values);
    }

    /**
     * Fetch records that have <code>bank_no BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfBankNo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.BANK_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bank_no IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByBankNo(String... values) {
        return fetch(Customers.CUSTOMERS.BANK_NO, values);
    }

    /**
     * Fetch records that have <code>variable BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfVariable(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.VARIABLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>variable IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByVariable(Integer... values) {
        return fetch(Customers.CUSTOMERS.VARIABLE, values);
    }

    /**
     * Fetch records that have <code>customer_status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfCustomerStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.CUSTOMER_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>customer_status IN (values)</code>
     */
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByCustomerStatus(String... values) {
        return fetch(Customers.CUSTOMERS.CUSTOMER_STATUS, values);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchRangeOfLexems(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(Customers.CUSTOMERS.LEXEMS, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<net.snet.crm.infra.db.jooq.tables.pojos.Customers> fetchByLexems(Object... values) {
        return fetch(Customers.CUSTOMERS.LEXEMS, values);
    }
}
