/*
 * This file is generated by jOOQ.
 */
package net.snet.crm.infra.db.jooq.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import net.snet.crm.infra.db.jooq.tables.Users;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "users", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "sis_user_pkey", columnNames = {"id"}),
    @UniqueConstraint(name = "sis_user_login_key", columnNames = {"login"}),
    @UniqueConstraint(name = "sis_user_name_key", columnNames = {"name"})
}, indexes = {
    @Index(name = "sis_user_login_key", unique = true, columnList = "login ASC"),
    @Index(name = "sis_user_name_key", unique = true, columnList = "name ASC"),
    @Index(name = "sis_user_pkey", unique = true, columnList = "id ASC")
})
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record9<Long, String, String, String, String, String, Long, String, String> {

    private static final long serialVersionUID = -775077323;

    /**
     * Setter for <code>public.users.id</code>.
     */
    public UsersRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 64)
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.users.login</code>.
     */
    public UsersRecord setLogin(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.users.login</code>.
     */
    @Column(name = "login", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getLogin() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users.passwd</code>.
     */
    public UsersRecord setPasswd(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.users.passwd</code>.
     */
    @Column(name = "passwd", length = 255)
    @Size(max = 255)
    public String getPasswd() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users.name</code>.
     */
    public UsersRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.users.name</code>.
     */
    @Column(name = "name", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.users.roles</code>.
     */
    public UsersRecord setRoles(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.users.roles</code>.
     */
    @Column(name = "roles", length = 255)
    @Size(max = 255)
    public String getRoles() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.users.key</code>.
     */
    public UsersRecord setKey(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.users.key</code>.
     */
    @Column(name = "key", length = 255)
    @Size(max = 255)
    public String getKey() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.users.reports_to</code>.
     */
    public UsersRecord setReportsTo(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.users.reports_to</code>.
     */
    @Column(name = "reports_to", nullable = false, precision = 64)
    public Long getReportsTo() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.users.operation_country</code>.
     */
    public UsersRecord setOperationCountry(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.users.operation_country</code>.
     */
    @Column(name = "operation_country", nullable = false, length = 2)
    @Size(max = 2)
    public String getOperationCountry() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.users.full_name</code>.
     */
    public UsersRecord setFullName(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.users.full_name</code>.
     */
    @Column(name = "full_name", nullable = false)
    public String getFullName() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, String, String, String, String, Long, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, String, String, String, String, Long, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.LOGIN;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.PASSWD;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.NAME;
    }

    @Override
    public Field<String> field5() {
        return Users.USERS.ROLES;
    }

    @Override
    public Field<String> field6() {
        return Users.USERS.KEY;
    }

    @Override
    public Field<Long> field7() {
        return Users.USERS.REPORTS_TO;
    }

    @Override
    public Field<String> field8() {
        return Users.USERS.OPERATION_COUNTRY;
    }

    @Override
    public Field<String> field9() {
        return Users.USERS.FULL_NAME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLogin();
    }

    @Override
    public String component3() {
        return getPasswd();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getRoles();
    }

    @Override
    public String component6() {
        return getKey();
    }

    @Override
    public Long component7() {
        return getReportsTo();
    }

    @Override
    public String component8() {
        return getOperationCountry();
    }

    @Override
    public String component9() {
        return getFullName();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLogin();
    }

    @Override
    public String value3() {
        return getPasswd();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getRoles();
    }

    @Override
    public String value6() {
        return getKey();
    }

    @Override
    public Long value7() {
        return getReportsTo();
    }

    @Override
    public String value8() {
        return getOperationCountry();
    }

    @Override
    public String value9() {
        return getFullName();
    }

    @Override
    public UsersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setLogin(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setPasswd(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public UsersRecord value5(String value) {
        setRoles(value);
        return this;
    }

    @Override
    public UsersRecord value6(String value) {
        setKey(value);
        return this;
    }

    @Override
    public UsersRecord value7(Long value) {
        setReportsTo(value);
        return this;
    }

    @Override
    public UsersRecord value8(String value) {
        setOperationCountry(value);
        return this;
    }

    @Override
    public UsersRecord value9(String value) {
        setFullName(value);
        return this;
    }

    @Override
    public UsersRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, Long value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Long id, String login, String passwd, String name, String roles, String key, Long reportsTo, String operationCountry, String fullName) {
        super(Users.USERS);

        set(0, id);
        set(1, login);
        set(2, passwd);
        set(3, name);
        set(4, roles);
        set(5, key);
        set(6, reportsTo);
        set(7, operationCountry);
        set(8, fullName);
    }
}
