/*
 * This file is generated by jOOQ.
 */
package net.snet.crm.infra.db.command.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import net.snet.crm.infra.db.command.Indexes;
import net.snet.crm.infra.db.command.Keys;
import net.snet.crm.infra.db.command.Public;
import net.snet.crm.infra.db.command.tables.records.NetworkRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Network extends TableImpl<NetworkRecord> {

    private static final long serialVersionUID = 486499233;

    /**
     * The reference instance of <code>public.network</code>
     */
    public static final Network NETWORK = new Network();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NetworkRecord> getRecordType() {
        return NetworkRecord.class;
    }

    /**
     * The column <code>public.network.id</code>.
     */
    public final TableField<NetworkRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('network_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.network.name</code>.
     */
    public final TableField<NetworkRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>public.network.info</code>.
     */
    public final TableField<NetworkRecord, String> INFO = createField(DSL.name("info"), org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>public.network.active</code>.
     */
    public final TableField<NetworkRecord, Boolean> ACTIVE = createField(DSL.name("active"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.network.type</code>.
     */
    public final TableField<NetworkRecord, Integer> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.network.mode</code>.
     */
    public final TableField<NetworkRecord, Integer> MODE = createField(DSL.name("mode"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.network.wds</code>.
     */
    public final TableField<NetworkRecord, Boolean> WDS = createField(DSL.name("wds"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.network.frequency</code>.
     */
    public final TableField<NetworkRecord, Integer> FREQUENCY = createField(DSL.name("frequency"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.network.vendor</code>.
     */
    public final TableField<NetworkRecord, String> VENDOR = createField(DSL.name("vendor"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.azimuth</code>.
     */
    public final TableField<NetworkRecord, String> AZIMUTH = createField(DSL.name("azimuth"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.ssid</code>.
     */
    public final TableField<NetworkRecord, String> SSID = createField(DSL.name("ssid"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.auth</code>.
     */
    public final TableField<NetworkRecord, String> AUTH = createField(DSL.name("auth"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.polarization</code>.
     */
    public final TableField<NetworkRecord, Integer> POLARIZATION = createField(DSL.name("polarization"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.network.country</code>.
     */
    public final TableField<NetworkRecord, Integer> COUNTRY = createField(DSL.name("country"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.network.norm</code>.
     */
    public final TableField<NetworkRecord, String> NORM = createField(DSL.name("norm"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.area</code>.
     */
    public final TableField<NetworkRecord, String> AREA = createField(DSL.name("area"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.aggregation</code>.
     */
    public final TableField<NetworkRecord, Boolean> AGGREGATION = createField(DSL.name("aggregation"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.network.width</code>.
     */
    public final TableField<NetworkRecord, String> WIDTH = createField(DSL.name("width"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.antenna</code>.
     */
    public final TableField<NetworkRecord, String> ANTENNA = createField(DSL.name("antenna"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.power</code>.
     */
    public final TableField<NetworkRecord, String> POWER = createField(DSL.name("power"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.master</code>.
     */
    public final TableField<NetworkRecord, String> MASTER = createField(DSL.name("master"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.linkto</code>.
     */
    public final TableField<NetworkRecord, String> LINKTO = createField(DSL.name("linkto"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.hardware</code>.
     */
    public final TableField<NetworkRecord, String> HARDWARE = createField(DSL.name("hardware"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.tdma</code>.
     */
    public final TableField<NetworkRecord, Boolean> TDMA = createField(DSL.name("tdma"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.network.latitude</code>.
     */
    public final TableField<NetworkRecord, String> LATITUDE = createField(DSL.name("latitude"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.longitude</code>.
     */
    public final TableField<NetworkRecord, String> LONGITUDE = createField(DSL.name("longitude"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.r_updatetime</code>.
     */
    public final TableField<NetworkRecord, Timestamp> R_UPDATETIME = createField(DSL.name("r_updatetime"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.network.r_firmware</code>.
     */
    public final TableField<NetworkRecord, String> R_FIRMWARE = createField(DSL.name("r_firmware"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.r_platform</code>.
     */
    public final TableField<NetworkRecord, String> R_PLATFORM = createField(DSL.name("r_platform"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.r_signal</code>.
     */
    public final TableField<NetworkRecord, String> R_SIGNAL = createField(DSL.name("r_signal"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.r_ccq</code>.
     */
    public final TableField<NetworkRecord, String> R_CCQ = createField(DSL.name("r_ccq"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.r_txrate</code>.
     */
    public final TableField<NetworkRecord, String> R_TXRATE = createField(DSL.name("r_txrate"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.r_rxrate</code>.
     */
    public final TableField<NetworkRecord, String> R_RXRATE = createField(DSL.name("r_rxrate"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.r_quality</code>.
     */
    public final TableField<NetworkRecord, String> R_QUALITY = createField(DSL.name("r_quality"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.r_capacity</code>.
     */
    public final TableField<NetworkRecord, String> R_CAPACITY = createField(DSL.name("r_capacity"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.r_lanspeed</code>.
     */
    public final TableField<NetworkRecord, String> R_LANSPEED = createField(DSL.name("r_lanspeed"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.r_txpower</code>.
     */
    public final TableField<NetworkRecord, String> R_TXPOWER = createField(DSL.name("r_txpower"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.monitoring</code>.
     */
    public final TableField<NetworkRecord, String> MONITORING = createField(DSL.name("monitoring"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.traceroute</code>.
     */
    public final TableField<NetworkRecord, String> TRACEROUTE = createField(DSL.name("traceroute"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.network.ping</code>.
     */
    public final TableField<NetworkRecord, String> PING = createField(DSL.name("ping"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.r_frequency</code>.
     */
    public final TableField<NetworkRecord, Integer> R_FREQUENCY = createField(DSL.name("r_frequency"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.network.model</code>.
     */
    public final TableField<NetworkRecord, String> MODEL = createField(DSL.name("model"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.uplink_port</code>.
     */
    public final TableField<NetworkRecord, String> UPLINK_PORT = createField(DSL.name("uplink_port"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.rstp_num_ring</code>.
     */
    public final TableField<NetworkRecord, Integer> RSTP_NUM_RING = createField(DSL.name("rstp_num_ring"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.network.uplink_sfp_tx</code>.
     */
    public final TableField<NetworkRecord, Integer> UPLINK_SFP_TX = createField(DSL.name("uplink_sfp_tx"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.network.linkto_port</code>.
     */
    public final TableField<NetworkRecord, String> LINKTO_PORT = createField(DSL.name("linkto_port"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.network.service</code>.
     */
    public final TableField<NetworkRecord, Integer> SERVICE = createField(DSL.name("service"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.network.port_info</code>.
     */
    public final TableField<NetworkRecord, String> PORT_INFO = createField(DSL.name("port_info"), org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>public.network.zbx_groups</code>.
     */
    public final TableField<NetworkRecord, String> ZBX_GROUPS = createField(DSL.name("zbx_groups"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * Create a <code>public.network</code> table reference
     */
    public Network() {
        this(DSL.name("network"), null);
    }

    /**
     * Create an aliased <code>public.network</code> table reference
     */
    public Network(String alias) {
        this(DSL.name(alias), NETWORK);
    }

    /**
     * Create an aliased <code>public.network</code> table reference
     */
    public Network(Name alias) {
        this(alias, NETWORK);
    }

    private Network(Name alias, Table<NetworkRecord> aliased) {
        this(alias, aliased, null);
    }

    private Network(Name alias, Table<NetworkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Network(Table<O> child, ForeignKey<O, NetworkRecord> key) {
        super(child, key, NETWORK);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.NETWORK_NAME_KEY);
    }

    @Override
    public Identity<NetworkRecord, Integer> getIdentity() {
        return Keys.IDENTITY_NETWORK;
    }

    @Override
    public List<UniqueKey<NetworkRecord>> getKeys() {
        return Arrays.<UniqueKey<NetworkRecord>>asList(Keys.NETWORK_NAME_KEY);
    }

    @Override
    public Network as(String alias) {
        return new Network(DSL.name(alias), this);
    }

    @Override
    public Network as(Name alias) {
        return new Network(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Network rename(String name) {
        return new Network(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Network rename(Name name) {
        return new Network(name, null);
    }
}
