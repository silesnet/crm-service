/*
 * This file is generated by jOOQ.
 */
package net.snet.crm.infra.db.command.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "network", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "network_pkey", columnNames = {"id"}),
    @UniqueConstraint(name = "network_name_key", columnNames = {"name"})
}, indexes = {
    @Index(name = "network_name_key", unique = true, columnList = "name ASC"),
    @Index(name = "network_pkey", unique = true, columnList = "id ASC")
})
public class Network implements Serializable {

    private static final long serialVersionUID = 890305732;

    private final Integer   id;
    private final String    name;
    private final String    info;
    private final Boolean   active;
    private final Integer   type;
    private final Integer   mode;
    private final Boolean   wds;
    private final Integer   frequency;
    private final String    vendor;
    private final String    azimuth;
    private final String    ssid;
    private final String    auth;
    private final Integer   polarization;
    private final Integer   country;
    private final String    norm;
    private final String    area;
    private final Boolean   aggregation;
    private final String    width;
    private final String    antenna;
    private final String    power;
    private final String    master;
    private final String    linkto;
    private final String    hardware;
    private final Boolean   tdma;
    private final String    latitude;
    private final String    longitude;
    private final Timestamp rUpdatetime;
    private final String    rFirmware;
    private final String    rPlatform;
    private final String    rSignal;
    private final String    rCcq;
    private final String    rTxrate;
    private final String    rRxrate;
    private final String    rQuality;
    private final String    rCapacity;
    private final String    rLanspeed;
    private final String    rTxpower;
    private final String    monitoring;
    private final String    traceroute;
    private final String    ping;
    private final Integer   rFrequency;
    private final String    model;
    private final String    uplinkPort;
    private final Integer   rstpNumRing;
    private final Integer   uplinkSfpTx;
    private final String    linktoPort;
    private final Integer   service;
    private final String    portInfo;
    private final String    zbxGroups;
    private final Integer   version;

    public Network(Network value) {
        this.id = value.id;
        this.name = value.name;
        this.info = value.info;
        this.active = value.active;
        this.type = value.type;
        this.mode = value.mode;
        this.wds = value.wds;
        this.frequency = value.frequency;
        this.vendor = value.vendor;
        this.azimuth = value.azimuth;
        this.ssid = value.ssid;
        this.auth = value.auth;
        this.polarization = value.polarization;
        this.country = value.country;
        this.norm = value.norm;
        this.area = value.area;
        this.aggregation = value.aggregation;
        this.width = value.width;
        this.antenna = value.antenna;
        this.power = value.power;
        this.master = value.master;
        this.linkto = value.linkto;
        this.hardware = value.hardware;
        this.tdma = value.tdma;
        this.latitude = value.latitude;
        this.longitude = value.longitude;
        this.rUpdatetime = value.rUpdatetime;
        this.rFirmware = value.rFirmware;
        this.rPlatform = value.rPlatform;
        this.rSignal = value.rSignal;
        this.rCcq = value.rCcq;
        this.rTxrate = value.rTxrate;
        this.rRxrate = value.rRxrate;
        this.rQuality = value.rQuality;
        this.rCapacity = value.rCapacity;
        this.rLanspeed = value.rLanspeed;
        this.rTxpower = value.rTxpower;
        this.monitoring = value.monitoring;
        this.traceroute = value.traceroute;
        this.ping = value.ping;
        this.rFrequency = value.rFrequency;
        this.model = value.model;
        this.uplinkPort = value.uplinkPort;
        this.rstpNumRing = value.rstpNumRing;
        this.uplinkSfpTx = value.uplinkSfpTx;
        this.linktoPort = value.linktoPort;
        this.service = value.service;
        this.portInfo = value.portInfo;
        this.zbxGroups = value.zbxGroups;
        this.version = value.version;
    }

    public Network(
        Integer   id,
        String    name,
        String    info,
        Boolean   active,
        Integer   type,
        Integer   mode,
        Boolean   wds,
        Integer   frequency,
        String    vendor,
        String    azimuth,
        String    ssid,
        String    auth,
        Integer   polarization,
        Integer   country,
        String    norm,
        String    area,
        Boolean   aggregation,
        String    width,
        String    antenna,
        String    power,
        String    master,
        String    linkto,
        String    hardware,
        Boolean   tdma,
        String    latitude,
        String    longitude,
        Timestamp rUpdatetime,
        String    rFirmware,
        String    rPlatform,
        String    rSignal,
        String    rCcq,
        String    rTxrate,
        String    rRxrate,
        String    rQuality,
        String    rCapacity,
        String    rLanspeed,
        String    rTxpower,
        String    monitoring,
        String    traceroute,
        String    ping,
        Integer   rFrequency,
        String    model,
        String    uplinkPort,
        Integer   rstpNumRing,
        Integer   uplinkSfpTx,
        String    linktoPort,
        Integer   service,
        String    portInfo,
        String    zbxGroups,
        Integer   version
    ) {
        this.id = id;
        this.name = name;
        this.info = info;
        this.active = active;
        this.type = type;
        this.mode = mode;
        this.wds = wds;
        this.frequency = frequency;
        this.vendor = vendor;
        this.azimuth = azimuth;
        this.ssid = ssid;
        this.auth = auth;
        this.polarization = polarization;
        this.country = country;
        this.norm = norm;
        this.area = area;
        this.aggregation = aggregation;
        this.width = width;
        this.antenna = antenna;
        this.power = power;
        this.master = master;
        this.linkto = linkto;
        this.hardware = hardware;
        this.tdma = tdma;
        this.latitude = latitude;
        this.longitude = longitude;
        this.rUpdatetime = rUpdatetime;
        this.rFirmware = rFirmware;
        this.rPlatform = rPlatform;
        this.rSignal = rSignal;
        this.rCcq = rCcq;
        this.rTxrate = rTxrate;
        this.rRxrate = rRxrate;
        this.rQuality = rQuality;
        this.rCapacity = rCapacity;
        this.rLanspeed = rLanspeed;
        this.rTxpower = rTxpower;
        this.monitoring = monitoring;
        this.traceroute = traceroute;
        this.ping = ping;
        this.rFrequency = rFrequency;
        this.model = model;
        this.uplinkPort = uplinkPort;
        this.rstpNumRing = rstpNumRing;
        this.uplinkSfpTx = uplinkSfpTx;
        this.linktoPort = linktoPort;
        this.service = service;
        this.portInfo = portInfo;
        this.zbxGroups = zbxGroups;
        this.version = version;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false, precision = 32)
    public Integer getId() {
        return this.id;
    }

    @Column(name = "name", nullable = false, length = 50)
    @NotNull
    @Size(max = 50)
    public String getName() {
        return this.name;
    }

    @Column(name = "info", length = 500)
    @Size(max = 500)
    public String getInfo() {
        return this.info;
    }

    @Column(name = "active")
    public Boolean getActive() {
        return this.active;
    }

    @Column(name = "type", precision = 32)
    public Integer getType() {
        return this.type;
    }

    @Column(name = "mode", precision = 32)
    public Integer getMode() {
        return this.mode;
    }

    @Column(name = "wds")
    public Boolean getWds() {
        return this.wds;
    }

    @Column(name = "frequency", precision = 32)
    public Integer getFrequency() {
        return this.frequency;
    }

    @Column(name = "vendor", length = 50)
    @Size(max = 50)
    public String getVendor() {
        return this.vendor;
    }

    @Column(name = "azimuth", length = 50)
    @Size(max = 50)
    public String getAzimuth() {
        return this.azimuth;
    }

    @Column(name = "ssid", length = 50)
    @Size(max = 50)
    public String getSsid() {
        return this.ssid;
    }

    @Column(name = "auth", length = 50)
    @Size(max = 50)
    public String getAuth() {
        return this.auth;
    }

    @Column(name = "polarization", precision = 32)
    public Integer getPolarization() {
        return this.polarization;
    }

    @Column(name = "country", precision = 32)
    public Integer getCountry() {
        return this.country;
    }

    @Column(name = "norm", length = 50)
    @Size(max = 50)
    public String getNorm() {
        return this.norm;
    }

    @Column(name = "area", length = 50)
    @Size(max = 50)
    public String getArea() {
        return this.area;
    }

    @Column(name = "aggregation")
    public Boolean getAggregation() {
        return this.aggregation;
    }

    @Column(name = "width", length = 50)
    @Size(max = 50)
    public String getWidth() {
        return this.width;
    }

    @Column(name = "antenna", length = 50)
    @Size(max = 50)
    public String getAntenna() {
        return this.antenna;
    }

    @Column(name = "power", length = 50)
    @Size(max = 50)
    public String getPower() {
        return this.power;
    }

    @Column(name = "master", length = 50)
    @Size(max = 50)
    public String getMaster() {
        return this.master;
    }

    @Column(name = "linkto", length = 50)
    @Size(max = 50)
    public String getLinkto() {
        return this.linkto;
    }

    @Column(name = "hardware", length = 50)
    @Size(max = 50)
    public String getHardware() {
        return this.hardware;
    }

    @Column(name = "tdma")
    public Boolean getTdma() {
        return this.tdma;
    }

    @Column(name = "latitude", length = 50)
    @Size(max = 50)
    public String getLatitude() {
        return this.latitude;
    }

    @Column(name = "longitude", length = 50)
    @Size(max = 50)
    public String getLongitude() {
        return this.longitude;
    }

    @Column(name = "r_updatetime")
    public Timestamp getRUpdatetime() {
        return this.rUpdatetime;
    }

    @Column(name = "r_firmware", length = 50)
    @Size(max = 50)
    public String getRFirmware() {
        return this.rFirmware;
    }

    @Column(name = "r_platform", length = 50)
    @Size(max = 50)
    public String getRPlatform() {
        return this.rPlatform;
    }

    @Column(name = "r_signal", length = 50)
    @Size(max = 50)
    public String getRSignal() {
        return this.rSignal;
    }

    @Column(name = "r_ccq", length = 50)
    @Size(max = 50)
    public String getRCcq() {
        return this.rCcq;
    }

    @Column(name = "r_txrate", length = 50)
    @Size(max = 50)
    public String getRTxrate() {
        return this.rTxrate;
    }

    @Column(name = "r_rxrate", length = 50)
    @Size(max = 50)
    public String getRRxrate() {
        return this.rRxrate;
    }

    @Column(name = "r_quality", length = 50)
    @Size(max = 50)
    public String getRQuality() {
        return this.rQuality;
    }

    @Column(name = "r_capacity", length = 50)
    @Size(max = 50)
    public String getRCapacity() {
        return this.rCapacity;
    }

    @Column(name = "r_lanspeed", length = 50)
    @Size(max = 50)
    public String getRLanspeed() {
        return this.rLanspeed;
    }

    @Column(name = "r_txpower", length = 50)
    @Size(max = 50)
    public String getRTxpower() {
        return this.rTxpower;
    }

    @Column(name = "monitoring", length = 50)
    @Size(max = 50)
    public String getMonitoring() {
        return this.monitoring;
    }

    @Column(name = "traceroute")
    public String getTraceroute() {
        return this.traceroute;
    }

    @Column(name = "ping", length = 50)
    @Size(max = 50)
    public String getPing() {
        return this.ping;
    }

    @Column(name = "r_frequency", precision = 32)
    public Integer getRFrequency() {
        return this.rFrequency;
    }

    @Column(name = "model", length = 50)
    @Size(max = 50)
    public String getModel() {
        return this.model;
    }

    @Column(name = "uplink_port", length = 50)
    @Size(max = 50)
    public String getUplinkPort() {
        return this.uplinkPort;
    }

    @Column(name = "rstp_num_ring", precision = 32)
    public Integer getRstpNumRing() {
        return this.rstpNumRing;
    }

    @Column(name = "uplink_sfp_tx", precision = 32)
    public Integer getUplinkSfpTx() {
        return this.uplinkSfpTx;
    }

    @Column(name = "linkto_port", length = 50)
    @Size(max = 50)
    public String getLinktoPort() {
        return this.linktoPort;
    }

    @Column(name = "service", precision = 32)
    public Integer getService() {
        return this.service;
    }

    @Column(name = "port_info", length = 500)
    @Size(max = 500)
    public String getPortInfo() {
        return this.portInfo;
    }

    @Column(name = "zbx_groups", length = 100)
    @Size(max = 100)
    public String getZbxGroups() {
        return this.zbxGroups;
    }

    @Column(name = "version", nullable = false, precision = 32)
    public Integer getVersion() {
        return this.version;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Network (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(info);
        sb.append(", ").append(active);
        sb.append(", ").append(type);
        sb.append(", ").append(mode);
        sb.append(", ").append(wds);
        sb.append(", ").append(frequency);
        sb.append(", ").append(vendor);
        sb.append(", ").append(azimuth);
        sb.append(", ").append(ssid);
        sb.append(", ").append(auth);
        sb.append(", ").append(polarization);
        sb.append(", ").append(country);
        sb.append(", ").append(norm);
        sb.append(", ").append(area);
        sb.append(", ").append(aggregation);
        sb.append(", ").append(width);
        sb.append(", ").append(antenna);
        sb.append(", ").append(power);
        sb.append(", ").append(master);
        sb.append(", ").append(linkto);
        sb.append(", ").append(hardware);
        sb.append(", ").append(tdma);
        sb.append(", ").append(latitude);
        sb.append(", ").append(longitude);
        sb.append(", ").append(rUpdatetime);
        sb.append(", ").append(rFirmware);
        sb.append(", ").append(rPlatform);
        sb.append(", ").append(rSignal);
        sb.append(", ").append(rCcq);
        sb.append(", ").append(rTxrate);
        sb.append(", ").append(rRxrate);
        sb.append(", ").append(rQuality);
        sb.append(", ").append(rCapacity);
        sb.append(", ").append(rLanspeed);
        sb.append(", ").append(rTxpower);
        sb.append(", ").append(monitoring);
        sb.append(", ").append(traceroute);
        sb.append(", ").append(ping);
        sb.append(", ").append(rFrequency);
        sb.append(", ").append(model);
        sb.append(", ").append(uplinkPort);
        sb.append(", ").append(rstpNumRing);
        sb.append(", ").append(uplinkSfpTx);
        sb.append(", ").append(linktoPort);
        sb.append(", ").append(service);
        sb.append(", ").append(portInfo);
        sb.append(", ").append(zbxGroups);
        sb.append(", ").append(version);

        sb.append(")");
        return sb.toString();
    }
}
