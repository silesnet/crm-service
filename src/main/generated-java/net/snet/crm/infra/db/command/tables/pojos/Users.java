/*
 * This file is generated by jOOQ.
 */
package net.snet.crm.infra.db.command.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "users", schema = "public", uniqueConstraints = {
    @UniqueConstraint(name = "sis_user_pkey", columnNames = {"id"}),
    @UniqueConstraint(name = "sis_user_login_key", columnNames = {"login"}),
    @UniqueConstraint(name = "sis_user_name_key", columnNames = {"name"})
}, indexes = {
    @Index(name = "sis_user_login_key", unique = true, columnList = "login ASC"),
    @Index(name = "sis_user_name_key", unique = true, columnList = "name ASC"),
    @Index(name = "sis_user_pkey", unique = true, columnList = "id ASC")
})
public class Users implements Serializable {

    private static final long serialVersionUID = 506184972;

    private final Long   id;
    private final String login;
    private final String passwd;
    private final String name;
    private final String roles;
    private final String key;
    private final Long   reportsTo;
    private final String operationCountry;
    private final String fullName;

    public Users(Users value) {
        this.id = value.id;
        this.login = value.login;
        this.passwd = value.passwd;
        this.name = value.name;
        this.roles = value.roles;
        this.key = value.key;
        this.reportsTo = value.reportsTo;
        this.operationCountry = value.operationCountry;
        this.fullName = value.fullName;
    }

    public Users(
        Long   id,
        String login,
        String passwd,
        String name,
        String roles,
        String key,
        Long   reportsTo,
        String operationCountry,
        String fullName
    ) {
        this.id = id;
        this.login = login;
        this.passwd = passwd;
        this.name = name;
        this.roles = roles;
        this.key = key;
        this.reportsTo = reportsTo;
        this.operationCountry = operationCountry;
        this.fullName = fullName;
    }

    @Id
    @Column(name = "id", nullable = false, precision = 64)
    @NotNull
    public Long getId() {
        return this.id;
    }

    @Column(name = "login", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getLogin() {
        return this.login;
    }

    @Column(name = "passwd", length = 255)
    @Size(max = 255)
    public String getPasswd() {
        return this.passwd;
    }

    @Column(name = "name", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getName() {
        return this.name;
    }

    @Column(name = "roles", length = 255)
    @Size(max = 255)
    public String getRoles() {
        return this.roles;
    }

    @Column(name = "key", length = 255)
    @Size(max = 255)
    public String getKey() {
        return this.key;
    }

    @Column(name = "reports_to", nullable = false, precision = 64)
    public Long getReportsTo() {
        return this.reportsTo;
    }

    @Column(name = "operation_country", nullable = false, length = 2)
    @Size(max = 2)
    public String getOperationCountry() {
        return this.operationCountry;
    }

    @Column(name = "full_name", nullable = false)
    public String getFullName() {
        return this.fullName;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(id);
        sb.append(", ").append(login);
        sb.append(", ").append(passwd);
        sb.append(", ").append(name);
        sb.append(", ").append(roles);
        sb.append(", ").append(key);
        sb.append(", ").append(reportsTo);
        sb.append(", ").append(operationCountry);
        sb.append(", ").append(fullName);

        sb.append(")");
        return sb.toString();
    }
}
